<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>createdInERP</name>
        <label>createdInERP</label>
        <locationX>1898</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Description</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Created in ERP model. </stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Created in ERP model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setAdditiveAndPastDue</name>
        <label>setAdditiveAndPastDue</label>
        <locationX>4538</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Additive &amp; Past Due model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setBadOutcomesOrder</name>
        <label>setBadOutcomesOrder</label>
        <locationX>578</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Bad Outcomes model. </stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setExpedited</name>
        <label>setExpedited</label>
        <locationX>2690</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Expedited model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setExpired</name>
        <label>setExpired</label>
        <locationX>1634</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Expired model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setFullyShipped</name>
        <label>setFullyShipped</label>
        <locationX>2954</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Fully Shipped model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setJobBadOutcome</name>
        <label>setJobBadOutcome</label>
        <locationX>842</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Job Bad Outcome model. </stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setJobCancelled</name>
        <label>setJobCancelled</label>
        <locationX>3482</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Job Cancelled model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setLateBadOutcome</name>
        <label>setLateBadOutcome</label>
        <locationX>50</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Late Bad Outcomes model. </stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setManufacturingProcess</name>
        <label>setManufacturingProcess</label>
        <locationX>4274</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Manufacturing Process model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setMQCustomFinish</name>
        <label>setMQCustomFinish</label>
        <locationX>4010</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the MQ Custom Finish model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setMQThreshold</name>
        <label>setMQThreshold</label>
        <locationX>1370</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the MQ Threshold model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setPartiallyShipped</name>
        <label>setPartiallyShipped</label>
        <locationX>3218</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Partially Shipped model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setPEFields</name>
        <label>setPEFields</label>
        <locationX>2426</locationX>
        <locationY>455</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.AttachedToId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Category</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Order/Job Tracking</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Resolved</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Owner.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.recordId__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.OrderID__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Type__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Ops_Order__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Ops_Order__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Order_ID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.OrderID__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Severity</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Sub_Type__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Criteria__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Criteria__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Initial_Criteria__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.InitialCriteria__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Aditional_Information__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.AdditionalInformation__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Xometry_Part_ID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Xometry_Part_ID__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.User__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Process_Group__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Process_Group__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Qualifying_Object__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Qualifying_Object__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Event_Type_Dispatcher</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setPOD</name>
        <label>setPOD</label>
        <locationX>2162</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the POD model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setRejectBadOutcome</name>
        <label>setRejectBadOutcome</label>
        <locationX>314</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Reject Bad Outcomes model. </stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setRejectedPart</name>
        <label>setRejectedPart</label>
        <locationX>3746</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by rejected part. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setTDays</name>
        <label>setTDays</label>
        <locationX>2426</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the T-Days model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Top20Customer</name>
        <label>Top 20 Customer</label>
        <locationX>1106</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The order/job was flagged by the Top 20 Customer model. </stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Event_Type_Dispatcher</name>
        <label>Event Type Dispatcher</label>
        <locationX>2426</locationX>
        <locationY>575</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Late_Bad_Outcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Late Bad Outcome</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.POD__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Automotive</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.processGroup_isAdditiveOnly__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.ManufacturingProcess__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Injection Molding:</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.ManufacturingProcess__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Injection Molding: Injection Molding Tool:</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.ManufacturingProcess__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Urethane Casting:</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.Bad_Outcomes_Manage_Result__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Do Not Manage</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setLateBadOutcome</targetReference>
            </connector>
            <label>Late Bad Outcome</label>
        </rules>
        <rules>
            <name>Reject_Bad_Outcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Reject Bad Outcome</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.POD__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Automotive</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.processGroup_isAdditiveOnly__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.ManufacturingProcess__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Injection Molding:</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.ManufacturingProcess__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Injection Molding: Injection Molding Tool:</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.ManufacturingProcess__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Urethane Casting:</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.Bad_Outcomes_Manage_Result__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Do Not Manage</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setRejectBadOutcome</targetReference>
            </connector>
            <label>Reject Bad Outcome</label>
        </rules>
        <rules>
            <name>Order_Bad_Outcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Bad Outcomes - Order Bad Outcome</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.POD__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Automotive</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ProcExceptionRecord.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.processGroup_isAdditiveOnly__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.ManufacturingProcess__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Injection Molding:</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.ManufacturingProcess__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Injection Molding: Injection Molding Tool:</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.ManufacturingProcess__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Urethane Casting:</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.Bad_Outcomes_Manage_Result__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Do Not Manage</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setBadOutcomesOrder</targetReference>
            </connector>
            <label>Order Bad Outcome</label>
        </rules>
        <rules>
            <name>Job_Bad_Outcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job Bad Outcome</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.POD__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Automotive</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>ProcExceptionRecord.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.processGroup_isAdditiveOnly__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.ManufacturingProcess__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Injection Molding:</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.ManufacturingProcess__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Injection Molding: Injection Molding Tool:</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.ManufacturingProcess__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Urethane Casting:</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Ops_Order__r.Bad_Outcomes_Manage_Result__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Do Not Manage</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setJobBadOutcome</targetReference>
            </connector>
            <label>Job Bad Outcome</label>
        </rules>
        <rules>
            <name>Top_20_Customer</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Top 20 Customer</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Account</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Top20Customer</targetReference>
            </connector>
            <label>Top 20 Customer</label>
        </rules>
        <rules>
            <name>MQ_Threshold</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MQ &gt; $ Threshold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setMQThreshold</targetReference>
            </connector>
            <label>MQ &gt; $ Threshold</label>
        </rules>
        <rules>
            <name>Expired</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Expired</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setExpired</targetReference>
            </connector>
            <label>Expired</label>
        </rules>
        <rules>
            <name>Created_in_ERP</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Created in ERP</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>createdInERP</targetReference>
            </connector>
            <label>Created in ERP</label>
        </rules>
        <rules>
            <name>POD</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>POD</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Account</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setPOD</targetReference>
            </connector>
            <label>POD</label>
        </rules>
        <rules>
            <name>T_Days_Out</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>T- Days Out</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setTDays</targetReference>
            </connector>
            <label>T- Days Out</label>
        </rules>
        <rules>
            <name>Expedited</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Expedited</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setExpedited</targetReference>
            </connector>
            <label>Expedited</label>
        </rules>
        <rules>
            <name>Fully_Shipped</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Fully Shipped</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setFullyShipped</targetReference>
            </connector>
            <label>Fully Shipped</label>
        </rules>
        <rules>
            <name>PartiallyShipped</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partially Shipped</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setPartiallyShipped</targetReference>
            </connector>
            <label>Partially Shipped</label>
        </rules>
        <rules>
            <name>Job_Cancelled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job Cancelled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setJobCancelled</targetReference>
            </connector>
            <label>Job Cancelled</label>
        </rules>
        <rules>
            <name>Rejected_Part</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Rejected Part</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setRejectedPart</targetReference>
            </connector>
            <label>Rejected Part</label>
        </rules>
        <rules>
            <name>MQ_Custom_Finish</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>MQ w/ Custom Finish</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setMQCustomFinish</targetReference>
            </connector>
            <label>MQ Custom Finish</label>
        </rules>
        <rules>
            <name>Mgf_Process</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Manufacturing Process</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setManufacturingProcess</targetReference>
            </connector>
            <label>Mgf Process</label>
        </rules>
        <rules>
            <name>Additive_Only_Past_Due</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Additive Only &amp; Past Due</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Order</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setAdditiveAndPastDue</targetReference>
            </connector>
            <label>Additive Only &amp; Past Due</label>
        </rules>
    </decisions>
    <description>APP-41641</description>
    <environments>Default</environments>
    <interviewLabel>OrderEventDispatcher {!$Flow.CurrentDateTime}</interviewLabel>
    <label>OrderEventDispatcher</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>createPE</name>
        <label>createPE</label>
        <locationX>2426</locationX>
        <locationY>911</locationY>
        <inputReference>ProcExceptionRecord</inputReference>
    </recordCreates>
    <recordLookups>
        <name>Get_Owner</name>
        <label>Get Owner</label>
        <locationX>2426</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>setPEFields</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Full_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Xometry Team</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>2300</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Owner</targetReference>
        </connector>
        <object>Order_Event__c</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>ProcExceptionRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ProcessException</objectType>
    </variables>
</Flow>
