<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>56.0</apiVersion>
    <assignments>
        <name>setAdditiveJobPastDue</name>
        <label>setAdditiveJobPastDue</label>
        <locationX>2954</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by the Additive Job Past Due</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setEstimatedCompletionDate</name>
        <label>setEstimatedCompletionDate</label>
        <locationX>2690</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by the Estimated Completion Date</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setFullyShipped</name>
        <label>setFullyShipped</label>
        <locationX>578</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by the Fully Shipped</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setJobCancelled</name>
        <label>setJobCancelled</label>
        <locationX>1106</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by the Job Cancelled</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setLateBadOutcomes</name>
        <label>setLateBadOutcomes</label>
        <locationX>50</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by the Late Bad Outcomes model. </stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setMaiorAdditiveJobValueThreshold</name>
        <label>setMaiorAdditiveJobValueThreshold</label>
        <locationX>3218</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by &gt; Additive Job Value Threshold</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setNonStandardInspection</name>
        <label>setNonStandardInspection</label>
        <locationX>1898</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by the Non-Standard Inspection</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setPartiallyShipped</name>
        <label>setPartiallyShipped</label>
        <locationX>842</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by the Partially Shipped</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setPartQualified</name>
        <label>setPartQualified</label>
        <locationX>1634</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by the Part Qualified</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setPEFields</name>
        <label>setPEFields</label>
        <locationX>1766</locationX>
        <locationY>455</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.AttachedToId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Category</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Order/Job Tracking </stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.recordId__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.JobID__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.OwnerId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Owner.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Type__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Type__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Ops_Order__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Job__r.OrderID__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Job_ID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.JobID__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Criteria__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Criteria__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Aditional_Information__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.AdditionalInformation__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Xometry_Part_ID__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Xometry_Part_ID__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.User__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Process_Group__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Process_Group__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Qualifying_Object__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Qualifying_Object__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>valideType</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setRejectBadOutcomes</name>
        <label>setRejectBadOutcomes</label>
        <locationX>314</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Status</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>New</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by the Reject Bad Outcomes model.</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setRejectedPart</name>
        <label>setRejectedPart</label>
        <locationX>1370</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by the Rejected Part</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setSPOCSupplier</name>
        <label>setSPOCSupplier</label>
        <locationX>2162</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by the SPOC Supplier</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setTopQualityAccount</name>
        <label>setTopQualityAccount</label>
        <locationX>2426</locationX>
        <locationY>695</locationY>
        <assignmentItems>
            <assignToReference>ProcExceptionRecord.Message</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>The job was flagged by the Top Quality Account</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>createPE</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>valideType</name>
        <label>valideType</label>
        <locationX>1766</locationX>
        <locationY>575</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>LateBadOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Late Bad Outcome</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Job__r.OrderID__r.POD__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Automotive</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setLateBadOutcomes</targetReference>
            </connector>
            <label>Late Bad Outcome</label>
        </rules>
        <rules>
            <name>RejectBadOutcome</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Reject Bad Outcome</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Job__r.OrderID__r.POD__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Automotive</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setRejectBadOutcomes</targetReference>
            </connector>
            <label>Reject Bad Outcome</label>
        </rules>
        <rules>
            <name>isFullyShipped</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Fully Shipped</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setFullyShipped</targetReference>
            </connector>
            <label>isFullyShipped</label>
        </rules>
        <rules>
            <name>isPartiallyShipped</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Partially Shipped</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setPartiallyShipped</targetReference>
            </connector>
            <label>isPartiallyShipped</label>
        </rules>
        <rules>
            <name>isJobCancelled</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job Cancelled</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setJobCancelled</targetReference>
            </connector>
            <label>isJobCancelled</label>
        </rules>
        <rules>
            <name>isRejectedPart</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Rejected Part</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setRejectedPart</targetReference>
            </connector>
            <label>isRejectedPart</label>
        </rules>
        <rules>
            <name>isPartQualified</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part Qualified</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setPartQualified</targetReference>
            </connector>
            <label>isPartQualified</label>
        </rules>
        <rules>
            <name>isNon_StandardInspection</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Non-Standard Inspection</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Part</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setNonStandardInspection</targetReference>
            </connector>
            <label>isNon-StandardInspection</label>
        </rules>
        <rules>
            <name>isSPOCSupplier</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>SPOC Supplier</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Supplier</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setSPOCSupplier</targetReference>
            </connector>
            <label>isSPOCSupplier</label>
        </rules>
        <rules>
            <name>isTopQualityAccount</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Top Quality Account</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Account</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setTopQualityAccount</targetReference>
            </connector>
            <label>isTopQualityAccount</label>
        </rules>
        <rules>
            <name>isEstimatedCompletionDate</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Estimated Completion Date</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setEstimatedCompletionDate</targetReference>
            </connector>
            <label>isEstimatedCompletionDate</label>
        </rules>
        <rules>
            <name>isAdditiveJobPastDue</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Additive Job Past Due</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setAdditiveJobPastDue</targetReference>
            </connector>
            <label>isAdditiveJobPastDue</label>
        </rules>
        <rules>
            <name>is_AdditiveJobValueThreshold</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>&gt; Additive Job Value Threshold</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Qualifying_Object__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Job</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setMaiorAdditiveJobValueThreshold</targetReference>
            </connector>
            <label>is&gt;AdditiveJobValueThreshold</label>
        </rules>
    </decisions>
    <description>Default to New</description>
    <environments>Default</environments>
    <interviewLabel>jobEvent {!$Flow.CurrentDateTime}</interviewLabel>
    <label>jobEvent</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>createPE</name>
        <label>createPE</label>
        <locationX>1766</locationX>
        <locationY>911</locationY>
        <inputReference>ProcExceptionRecord</inputReference>
    </recordCreates>
    <recordLookups>
        <name>Get_Owner</name>
        <label>Get Owner</label>
        <locationX>1766</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>setPEFields</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Full_Name__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Xometry Team</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <start>
        <locationX>1640</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Owner</targetReference>
        </connector>
        <object>Job_Event__c</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>ProcExceptionRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>ProcessException</objectType>
    </variables>
</Flow>
